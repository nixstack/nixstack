server {
  # resolver 127.0.0.11 ipv6=off;
  # resolver_timeout 5s;

  listen 80;
  server_name node.local;

  server_tokens off;

  access_log /var/log/nginx/node.local.access.log main;
  error_log /var/log/nginx/node.local.error.log;
  root /home/public_html/node.local;
  location = / {
    index index.html index.htm;
    # try_files /index.html /index.htm @proxy;
  }
  location / {
    try_files $uri @proxy;
  }
  #set $internal_srv internal-node.local:80;
  location @proxy {
    proxy_http_version 1.1;
    #proxy_buffering off;
    proxy_set_header Proxy "";
    proxy_connect_timeout 6s;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_pass http://172.24.0.3:80;
    # proxy_pass http://$internal_srv;
    proxy_pass http://unix:/tmp/node.local/nginx.socket;
  }
  # Disable .htaccess and other hidden files
  location ~ /\.(?!well-known).* {
    deny all;
    access_log off;
    log_not_found off;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|eot|svg|ttf|woff)$ {
    gzip_static off;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    access_log off;
    expires 30d;
    break;
  }

  location ~* \.(txt|js|css)$ {
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    access_log off;
    expires 30d;
    break;
  }
}
