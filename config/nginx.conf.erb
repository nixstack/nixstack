# daemon off;
# # see https://gist.github.com/denji/8359866
# #Heroku dynos have at least 4 cores.
# worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

# events {
# 	worker_connections 1024;
# }

# http {
#     # Resource interpreted as Stylesheet but transferred with MIME type
#     include mime.types;
#     default_type application/octet-stream;


#     limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

#     gzip on;
#     gzip_comp_level 2;
#     gzip_min_length 512;

# 	server_tokens off;

#     # to boost I/O on HDD we can disable access logs
#     access_log off;

#     # copies data between one FD and other from within the kernel
#     # faster than read() + write()
#     sendfile on;

#     map $http_upgrade $connection_upgrade {
#         default upgrade;
#         '' close;
#     }

# 	upstream app_server {
# 		server unix:/tmp/nginx.socket fail_timeout=0;
#  	}

#     upstream websocket {
#         server unix:/tmp/nginx.socket fail_timeout=0;
#     }

#     upstream websocket2 {
#         server unix:/tmp/nginx.socket2 fail_timeout=0;
#     }

#     upstream websocket3 {
#         server unix:/tmp/nginx.socket3 fail_timeout=0;
#     }

#     upstream APP_DATA_URL {
#         server <%= ENV['APP_DATA_URL'] || 'unix:/tmp/nginx.socket' %> fail_timeout=0;
#     }

#     upstream APP_MOCK_URL {
#         server <%= ENV['APP_MOCK_URL'] || 'unix:/tmp/nginx.socket' %> fail_timeout=0;
#     }

# 	server {
# 		listen <%= ENV["PORT"] %>;
# 		server_name _;
#         keepalive_timeout 5;

#         root /app/__public__/app-indoor;
#         location = / {
#           index index.html index.htm;
#           # try_files /index.html /index.htm @proxy;
#         }

#         location / {
#             try_files $uri @proxy;
#           }

# 		location @proxy {
# 		    # rate limiting
# 		    limit_req zone=mylimit;

# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# 			proxy_set_header Host $http_host;
# 			proxy_redirect off;
# 			proxy_pass http://websocket;

#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection $connection_upgrade;
#         }
        
#         # location /api/ {
# 		#     # rate limiting
# 		#     limit_req zone=mylimit;

# 		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# 		# 	proxy_set_header Host $http_host;
# 		# 	proxy_redirect off;
# 		# 	proxy_pass http://websocket2;

#         #     proxy_http_version 1.1;
#         #     proxy_set_header Upgrade $http_upgrade;
#         #     proxy_set_header Connection $connection_upgrade;
#         # }
        
#         # location /auth/ {
# 		#     # rate limiting
# 		#     limit_req zone=mylimit;

# 		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# 		# 	proxy_set_header Host $http_host;
# 		# 	proxy_redirect off;
# 		# 	proxy_pass http://websocket3;

#         #     proxy_http_version 1.1;
#         #     proxy_set_header Upgrade $http_upgrade;
#         #     proxy_set_header Connection $connection_upgrade;
#         # }
        
#         # location /data/ {
# 		#     # rate limiting
# 		#     limit_req zone=mylimit;

# 		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# 		# 	proxy_set_header Host $http_host;
# 		# 	proxy_redirect off;
# 		# 	proxy_pass http://APP_DATA_URL;

#         #     proxy_http_version 1.1;
#         #     proxy_set_header Upgrade $http_upgrade;
#         #     proxy_set_header Connection $connection_upgrade;
#         # }
        
#         # location /mock/ {
# 		#     # rate limiting
# 		#     limit_req zone=mylimit;

# 		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# 		# 	proxy_set_header Host $http_host;
# 		# 	proxy_redirect off;
# 		# 	proxy_pass http://APP_MOCK_URL;

#         #     proxy_http_version 1.1;
#         #     proxy_set_header Upgrade $http_upgrade;
#         #     proxy_set_header Connection $connection_upgrade;
#         # }
        
#         location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|eot|svg|ttf|woff)$ {
#             gzip_static off;
#             add_header Pragma public;
#             add_header Cache-Control "public, must-revalidate, proxy-revalidate";
#             access_log off;
#             expires 30d;
#             break;
#           }
        
#           location ~* \.(txt|js|css)$ {
#             add_header Pragma public;
#             add_header Cache-Control "public, must-revalidate, proxy-revalidate";
#             access_log off;
#             expires 30d;
#             break;
#           }
# 	}
# }

daemon off;
# see https://gist.github.com/denji/8359866
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	worker_connections 1024;
}

http {
    # Resource interpreted as Stylesheet but transferred with MIME type
    include mime.types;
    default_type application/octet-stream;

    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

	server_tokens off;

    # to boost I/O on HDD we can disable access logs
    access_log off;

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
 	}

    upstream websocket {
        server unix:/tmp/nginx.socket fail_timeout=0;
    }

	server {
		listen <%= ENV["PORT"] %>;
		server_name _;
        keepalive_timeout 5;

        location ^~ /app-indoor {
            # root /app/__public__/app-indoor;
            # index index.html;
            # try_files $uri /index.html;
            alias /app/__public__/app-indoor;
            index index.html index.htm;
        }

        location ^~ /app-viz {
            alias /app/__public__/app-viz;
            index index.html index.htm;
        }
        
        location = / {
            root /app/__public__;
            index index.html index.htm;
            # try_files /index.html /index.htm @proxy;
        }

        ocation ^~ /files/stream/ {
			# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 404
            # proxy_set_header Host $http_host;
            # 404
			# proxy_redirect off;
			proxy_pass https://nixstack-fs.herokuapp.com;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location ^~ /files/ {
			# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 404
            # proxy_set_header Host $http_host;
            # 404
			# proxy_redirect off;
			proxy_pass <%= ENV['FILE_SYS_URL'] %>;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location / {
            try_files $uri @proxy;
          }

		location @proxy {
		    # rate limiting
		    limit_req zone=mylimit;

			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_pass http://websocket;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
	}
}
